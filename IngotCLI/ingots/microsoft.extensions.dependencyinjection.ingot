ingot Microsoft.Extensions.DependencyInjection {
  class DefaultServiceProviderFactory {
    func CreateBuilder(IServiceCollection services): IServiceCollection
    func CreateServiceProvider(IServiceCollection containerBuilder): IServiceProvider
    func GetType(): Type
    func ToString(): String
    func Equals(Object obj): Boolean
    func GetHashCode(): Int32
  }
  class ServiceCollectionContainerBuilderExtensions {
    /// Creates a  containing services from the provided .
    func BuildServiceProvider(IServiceCollection services): ServiceProvider
    /// Creates a  containing services from the provided 
            optionally enabling scope validation.
    func BuildServiceProvider(IServiceCollection services, Boolean validateScopes): ServiceProvider
    /// Creates a  containing services from the provided 
            optionally enabling scope validation.
    func BuildServiceProvider(IServiceCollection services, ServiceProviderOptions options): ServiceProvider
    func GetType(): Type
    func ToString(): String
    func Equals(Object obj): Boolean
    func GetHashCode(): Int32
  }
  class ServiceProvider {
    /// Gets the service object of the specified type.
    func GetService(Type serviceType): Object
    /// Gets the service object of the specified type with the specified key.
    func GetKeyedService(Type serviceType, Object serviceKey): Object
    /// Gets the service object of the specified type.
    func GetRequiredKeyedService(Type serviceType, Object serviceKey): Object
    func Dispose(): Void
    func DisposeAsync(): ValueTask
    func GetType(): Type
    func ToString(): String
    func Equals(Object obj): Boolean
    func GetHashCode(): Int32
  }
  class ServiceProviderOptions {
    func GetType(): Type
    func ToString(): String
    func Equals(Object obj): Boolean
    func GetHashCode(): Int32
  }
}
